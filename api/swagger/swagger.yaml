swagger: '2.0'

## API Information
info:
  version: '0.0.3'
  title: "Simple öV transportation API"
  description: "A simple API to book öV tickets."
  contact:
    name: Team SVS Vertrieb
    email: andreas.schlapbach@sbb.ch
    url: http://transportationAPI.sbb.ch/
  license:
    name: SBB
    url: http://opensource.org/licenses/MIT
host: localhost:10010 #transportationAPI.sbb.ch
basePath: /
schemes:
  - http # Nur am Anfang
  - https
consumes:
  - application/json
produces:
  - application/json

## Security
#securityDefinitions:
#  oauth:
#    type: oauth2
#    flow: implicit
#    authorizationUrl: https://xyz #To clarify
#    scopes:
#      basic: |
#       to read any and all data related to the B2P API
#security:
#  - oauth:
#    - basic

## Paths
paths:

  ### Fahrplan Part
  /standorte/{name}:
    x-swagger-router-controller: standorte
    get:
      description: "Hole Standorte Codes"
      operationId: getStandorte
      parameters:
        - name: name
          in: path
          description: "Name des Standortes"
          required: true
          type: string
      responses:
        200:
          description: "Eine Liste von Haltepunkte Codes"
          schema:
            type: array
            items:
              $ref: '#/definitions/standort'
        default:
          description: "unexpected error"

  /verbindungen/:
    x-swagger-router-controller: verbindungen
    post:
      description: "Hole Verbindungen"
      parameters:
        - in: body
          name: verbindungsAnfrage 
          description: "Anfrage für Verbindungen von A nach B."
          required: true
          schema:
            $ref: '#/definitions/verbindungsAnfrage'
      responses:
        200:
          description: "Eine Liste von Verbindungen"
          schema:
            type: array
            items:
              $ref: '#/definitions/verbindung'
        default:
          description: "unexpected error"

  ### Vertrieb Part
  /angebote/:
    x-swagger-router-controller: angebote
    post:
      description: "Hole Angebote"
      parameters:
         - name: angebotsAnfrage 
           in: body
           description: "Anfrage für Angebote für eine Verbindung oder Strecke."
           required: true
           schema:
              $ref: '#/definitions/angebotsAnfrage'
      responses:
        200:
          description: "Eine Liste von Angeboten"
          schema:
            type: array
            items:
              $ref: '#/definitions/angebot'
        default:
          description: "unexpected error"

  /vorabbuchungen/{angebotsId}:
    x-swagger-router-controller: vorabbuchungen
    get:
      description: "Vorabbuche das Angebot"
      parameters:
        - name: angebotsId
          in: path
          description: "Id eines Angebotes"
          required: true
          type: integer
      responses:
        200:
          description: "Vorabbuchung bestätigt"
          schema:
            description: "VorabbuchungsId"
            type: string
        default:
          description: "unexpected error"

  /buchungen/{vorabbuchungsId}:
    x-swagger-router-controller: buchungen
    get:
      description: "Buche die Vorabbuchung"
      parameters:
        - name: vorabbuchungsId
          in: path
          description: "Id einer Vorabbuchung"
          required: true
          type: integer
      responses:
        200:
          description: "Buchung bestätigt"
          schema:
            description: "BuchungsId"
            type: string
        default:
          description: "unexpected error"
          
  /billette/{buchungsId}:
    x-swagger-router-controller: billette
    get:
      description: "Hole die URL, wo das Billett zu einer Buchung heruntergeladen kann. Think: PDF als Enc64 schicken?"
      parameters:
        - name: buchungsId
          in: path
          description: "Id einer Buchung"
          required: true
          type: string
      responses:
        200:
          description: "Billett"
          schema:
            $ref: '#/definitions/billett'
        default:
          description: "unexpected error"

## Definitions

definitions:
  standort:
    type: object
    required: 
      - name
      - code
    properties:
      name:
        type: string
      code: 
        type: string
  verbindungsAnfrage:
    type: object
    required:
      - vonCode
      - nachCode
      - datum
      - zeit
    properties:
      vonCode:
        type: string
      viaCodes:
        type: array
        items:
          type: string
      nachCode:
        type: string
      datum:
        type: string
        format: date
      zeit:
        type: string
        format: dateTime
  verbindung:
    type: object
    required:
      - id
    properties:
      id:
        type: string
  strecke:
    type: object
    required:
      - von
      - nach
    properties:
      von: 
        type: string
      nach:
        type: string
      via:
        type: array
        items: 
          type: string
  person:
    type: object
    required:
      - alter
    properties:
      alter:
        type: integer
      ermaessigung:
        type: string
        enum:
         - ga
         - halbtax
  angebotsAnfrage:
    type: object
    required:
      - personen
      ### + entweder Strecke oder Verbindung
    properties:
      verbindung:
        $ref: '#/definitions/verbindung'
      strecke:
        $ref: '#/definitions/strecke'
      personen:
        type: array
        items:
          $ref: '#/definitions/person'
  angebot:
    type: object
    required:
      - angebotId 
    properties:
      angebotId:
        type: string
      beschreibung:
        type: string
  billett:
    type: object
    properties:
      typ:
        type: string
        enum:
        - pdf
        - screenTicket
      url:
        type: string
    