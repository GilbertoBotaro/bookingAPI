swagger: '2.0'

## API Information
info:
  version: '0.0.3'
  title: "Simple öV booking API"
  description: "A simple API to book öV tickets in Switzerland."
  contact:
    name: Team SVS Vertrieb
    email: andreas.schlapbach@sbb.ch
    url: http://transportationAPI.sbb.ch/
  license:
    name: SBB
    url: https://data.sbb.ch/page/licence/
host: localhost:8080 #transportationAPI.sbb.ch
basePath: /api
schemes:
  - http # Nur am Anfang
  - https
consumes:
  - application/json
produces:
  - application/json
  - application/pdf

## Security
#securityDefinitions:
#  oauth:
#    type: oauth2
#    flow: implicit
#    authorizationUrl: https://xyz #To clarify
#    scopes:
#      basic: |
#       to read any and all data related to the B2P API
#security:
#  - oauth:
#    - basic

## Paths
paths:

  ### Fahrplan Part

  # ToDo: Define properly with Team VTP

  /standorte/{name}:
    x-swagger-router-controller: standorte
    get:
      description: "Hole Standorte Codes"
      operationId: getStandorte
      parameters:
        - name: name
          in: path
          description: "Name des Standortes"
          required: true
          type: string
          default: 'Bern'
      responses:
        200:
          description: "Eine Liste von Haltepunkte Codes"
          schema:
            type: array
            items:
              $ref: '#/definitions/standort'
        default:
          description: "unexpected error"

  # ToDo: Define properly with Team VTP

  /verbindungen/:
    x-swagger-router-controller: verbindungen
    get:
      description: "Hole Verbindungen"
      operationId: getVerbindungen
      parameters:
        - name: vonUICode
          in: query
          description: "Abfahrtsort als UIC Code"
          type: integer
          default: 8507000

      # ToDo: Get right later
      #  - viaCodes:
      #    type: array
      #    items:
      #      name: viaCode
      #      in: query
      #      description: "Via Ort als UIC Code"
      #      type: integer

        - name: nachUICode
          description: "Ankunftsort als UIC Code"
          in: query
          type: integer
          default: 8508500
        - name: datum
          in: query
          description: "Datum"
          type: string
          format: date
          default: '2017-01-14'
        - name: zeit
          in: query
          description: "Zeit"
          type: string
          format: dateTime
          default: '20:22'
      responses:
        200:
          description: "Eine Liste von Verbindungen"
          schema:
            type: array
            items:
              $ref: '#/definitions/verbindung'
        default:
          description: "unexpected error"

  ### Business Partner Part

  /personen/{personsId}:
    x-swagger-router-controller: personen
    get:
      description: "Holt die Person"
      operationId: getPersonen
      parameters:
        - name: personsId
          in: path
          description: "Id einer Person"
          required: true
          type: string
          default: "P1" # for simplier mock testing only
      responses:
        200:
          description: "Die Person"
          schema:
            $ref: '#/definitions/person'
        default:
          description: "unexpected error"

  /personen/:
    x-swagger-router-controller: personen
    post:
      description: "Erstellt die Person."
      operationId: postPersonen
      parameters:
         - name: person
           in: body
           description: "Daten der zu erstellenden Person"
           required: true
           schema:
              $ref: '#/definitions/person'
      responses:
        200:
          description: "Person erstellt"
          schema:
            $ref: '#/definitions/personsId'
        default:
          description: "unexpected error"

  ### Vertriebs Part

  /angebote/:
    x-swagger-router-controller: angebote
    get:
      description: "Hole Angebote für eine VerbindungsId (ReconstructionContext oder (vonUICode, nachUICode, ViaUICode, Datum, Zeit)). Der zweite Ansatz ist Convenience."
      operationId: getAngebote
      parameters:
        - name: recContext
          in: query
          description: "Reconstruction Context wie vom Fahrplan erstellt"
          required: true
          type: string
          default: 'RecContext-RC1'
        - name: vonUICode
          in: query
          description: "Abfahrtsort als UIC Code"
          type: integer
          default: 8507000

      # ToDo: Get right later
      #  - viaCodes:
      #    type: array
      #    items:
      #      name: viaCode
      #      in: query
      #      description: "Via Ort als UIC Code"
      #      type: integer

        - name: nachUICode
          description: "Ankunftsort als UIC Code"
          in: query
          type: integer
          default: 8508500
        - name: datum
          in: query
          description: "Datum"
          type: string
          format: date
          default: '2017-01-14'
        - name: zeit
          in: query
          description: "Zeit"
          type: string
          format: dateTime
          default: '20:22'

      # ToDo; Scale for more than one traveller
        - name: alter
          in: query
          description: 'Alter des Reisenden'
          type: integer
          default: 42
        - name: ermaessigung
          in: query
          description: 'Ermaessigung: {GA. Halbtax}'
          type: string
          default: 'halbtax'
          enum:
           - keine
           - ga
           - halbtax
      responses:
        200:
          description: "Eine Liste von Angeboten"
          schema:
            type: array
            items:
              $ref: '#/definitions/angebot'
        default:
          description: "unexpected error"

    post:
      description: "Vorabbucht das Angebot und erstellt eine Vorabbuchung."
      operationId: postAngebote
      parameters:
         - name: angebotsId
           in: body
           description: "Das zu vorabbuchende Angebot"
           required: true
           schema:
              $ref: '#/definitions/angebotsId'
      responses:
        200:
          description: "Angebot vorabgebucht"
          schema:
            $ref: '#/definitions/vorabbuchung'
        default:
          description: "unexpected error"

  /vorabbuchungen/:
    x-swagger-router-controller: vorabbuchungen
    post:
      description: "Bucht die Vorabbuchung und erstellt die Buchung."
      operationId: postVorabbuchungen
      parameters:
        - name: vorabbuchungsId
          in: body
          description: "Die zu buchende Vorabbuchung"
          required: true
          schema:
            $ref: '#/definitions/vorabbuchung'
      responses:
        200:
          description: "Vorabbuchung gebucht"
          schema:
            $ref: '#/definitions/buchungsId'
        default:
          description: "unexpected error"

  /buchungen/{buchungsId}:
    x-swagger-router-controller: buchungen
    get:
      description: "Hole die Buchung"
      operationId: getBuchung
      parameters:
        - name: buchungsId
          in: path
          description: "Id einer Vorabbuchung"
          required: true
          type: string
          default: "B1" # for simplier mock testing only
      responses:
        200:
          description: "Die Buchung"
          schema:
            $ref: '#/definitions/buchung'
        default:
          description: "unexpected error"

  /buchungen/{buchungsId}/annullieren:
    x-swagger-router-controller: buchungen
    get:
      description: "Annuliere die Buchung"
      operationId: getBuchungAnnullieren
      parameters:
        - name: buchungsId
          in: path
          description: "Id einer Buchung"
          required: true
          type: string
          default: "B1" # for simplier mock testing only
      responses:
        200:
          description: "Buchung annulliert"
          schema:
            type: string
        default:
          description: "unexpected error"

  /billette/{buchungsId}:
    x-swagger-router-controller: billette
    get:
      description: "Hole das Billett"
      operationId: getBillette
      parameters:
        - name: buchungsId
          in: path
          description: "Id einer Buchung"
          required: true
          type: string
          default: "B1" # for simplier mock testing only
        - name: typ
          description: "Typ des Billetts: {pdf, screen}"
          in: query
          type: string
          default: 'pdf'
          enum:
            - pdf
            - screen
      responses:
        200:
          description: "Billett"
        default:
          description: "unexpected error"

## Definitions

definitions:
  # ToDo: Define properly with Team VTP
  standort:
    type: object
    required:
      - name
      - code
    properties:
      name:
        type: string
      code:
        type: string

  # ToDo: Define properly with Team VTP
  verbindung:
    type: object
    required:
      - verbindungsId
    properties:
      verbindungsId:
        description: "Id einer Verbindung (ReconstructionContext)"
        type: string
      zugNummer:
        description: "Zugnummer"
        type: string
      abfahrtsOrt:
        description: "Abfahrtsort"
        type: string
      abfahrtsDatum:
        description: "Abfahrtsdatum"
        type: string
        format: date
      abfahrtsZeit:
        description: "Abfahrtszeit"
        type: string
        format: dateTime
      ankunftsOrt:
        description: "Ankunftsort"
        type: string
      ankunftsDatum:
        description: "Ankunftsdatum"
        type: string
        format: date
      ankunftsZeit:
        description: "Ankunftszeit"
        type: string
        format: dateTime
      links:
        type: array
        items:
          $ref: '#/definitions/link'

  person:
    type: object
    required:
      - geburtsdatum
      - ermaessigung
    properties:
      vorname:
        description: "Vornamen der Person"
        type: string
        default: 'Elon'
      name:
        description: "Name der Person"
        type: string
        default: 'Musk'
      geburtsdatum:
        description: "Geburtsdatum der Person"
        type: string
        format: date
        default: '1971-06-28'
      ermaessigung:
        description: 'Ermaessigung: {Keine, GA, Halbtax}'
        type: string
        default: 'halbtax'
        enum:
         - keine
         - halbtax
         - ga

  personsId:
    type: object
    required:
      - personsId
    properties:
      personsId:
        description: "Id einer Person"
        type: string
        default: "P1" # for simplier mock testing only

  angebot:
    type: object
    required:
      - angebotsId
      - beschreibung
      - preis
    properties:
      angebotsId:
        description: "Id eines Angebotes"
        type: string
      beschreibung:
        description: "Beschreibung des Angebotes"
        type: string
      preis:
        description: "Preis des Angebotes"
        type: integer
      links:
        type: array
        items:
          $ref: '#/definitions/link'

  angebotsId:
    type: object
    required:
      - angebotsId
    properties:
      angebotsId:
        description: "Id eines Angebotes"
        type: string
        default: "A1" # for simplier mock testing only

  vorabbuchung:
    type: object
    required:
     - vorabbuchungsId
    properties:
      vorabbuchungsId:
        description: "Id einer Vorabbbuchung"
        type: string
        default: "V1" # for simplier mock testing only

  buchungsId:
    type: object
    required:
     - buchungsId
    properties:
      buchungsId:
        description: "Id einer Buchung"
        type: string
        default: "B1" # for simplier mock testing only

  buchung:
    type: object
    required:
     - buchungsId
    properties:
      buchungsId:
        description: "Id einer Buchung"
        type: string
      beschreibung:
        description: "Beschreibung der Buchung"
        type: string
      links:
        type: array
        items:
          $ref: '#/definitions/link'



  ### REST level 3 support

  link:
    type: object
    required:
     - rel
     - href
    properties:
      rel:
        type: string
        description: "Aktion"
      href:
        type: string
        description: "URL zu Auslösung der Aktion"
